snippet beg "begin{} / end{}" bA
	\\begin{$1}
		$0
	\\end{$1}
	

priority 100
snippet ... "ldots" iA
	\ldots
	

snippet table "Table environment" b
	\begin{table}[${1:htpb}]
		\centering
		\caption{${2:caption}}
		\label{tab:${3:label}}
		\begin{tabular}{${5:c}}
		$0${5/((?<=.)c|l|r)|./(?1: & )/g}
		\end{tabular}
	\end{table}
	

snippet fig "Figure environment" b
	\begin{figure}[${1:htpb}]
		\centering
		${2:\includegraphics[width=0.8\textwidth]{$3}}
		\caption{${4:$3}}
		\label{fig:${5:${3/\W+/-/g}}}
	\end{figure}
	

snippet enum "Enumerate" bA
	\begin{enumerate}
		\item $0
	\end{enumerate}
	

snippet item "Itemize" bA
	\begin{itemize}
		\item $0
	\end{itemize}
	

snippet desc "Description" b
	\begin{description}
		\item[$1] $0
	\end{description}
	

snippet pac "Package" b
	\usepackage[${1:options}]{${2:package}}$0
	

snippet => "implies" Ai
	\implies
	

snippet =< "implied by" Ai
	\impliedby
	

	
snippet iff "iff" Ai
	\iff
	

snippet mk "Math" wA
	$${1}$`!p
	if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
		snip.rv = ' '
	else:
		snip.rv = ''
	`$2
	

snippet dm "Math" wA
	\[
	${1:${VISUAL}}
	.\] $0
	

snippet ali "Align" bA
	\begin{align*}
		${1:${VISUAL}}
	.\end{align*}
	


	
snippet // "Fraction" iA
	\\frac{$1}{$2}$0
	

snippet / "Fraction" i
	\\frac{${VISUAL}}{$1}$0
	

	
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
	\\frac{`!p snip.rv = match.group(1)`}{$1}$0
	

priority 1000
snippet '^.*\)/' "() frac" wrA
	`!p
	stripped = match.string[:-1]
	depth = 0
	i = len(stripped) - 1
	while True:
		if stripped[i] == ')': depth += 1
		if stripped[i] == '(': depth -= 1
		if depth == 0: break;
		i-=1
	snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
	`{$1}$0
	

	
snippet '([A-Za-z])(\d)' "auto subscript" wrA
	`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
	

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
	`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
	


snippet sympy "sympyblock " w
	sympy $1 sympy$0
	

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
	`!p
	from sympy import *
	x, y, z, t = symbols('x y z t')
	k, m, n = symbols('k m n', integer=True)
	f, g, h = symbols('f g h', cls=Function)
	init_printing()
	snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
	`
	

priority 1000
snippet math "mathematicablock" w
	math $1 math$0
	

priority 10000
snippet 'math(.*)math' "math" wr
	`!p
	import subprocess
	code = match.group(1)
	code = 'ToString[' + code + ', TeXForm]'
	snip.rv = subprocess.check_output(['wolframscript', '-code', code])
	`
	

snippet == "equals" iA
	&= $1 \\\\
	

snippet != "equals" iA
	\neq 
	

snippet ceil "ceil" iA
	\left\lceil $1 \right\rceil $0
	

snippet floor "floor" iA
	\left\lfloor $1 \right\rfloor$0
	

snippet pmat "pmat" iA
	\begin{pmatrix} $1 \end{pmatrix} $0
	

snippet bmat "bmat" iA
	\begin{bmatrix} $1 \end{bmatrix} $0
	

snippet () "left( right)" iA
	\left( ${1:${VISUAL}} \right) $0
	

snippet lr "left( right)" i
	\left( ${1:${VISUAL}} \right) $0
	

snippet lr( "left( right)" i
	\left( ${1:${VISUAL}} \right) $0
	

snippet lr| "left| right|" i
	\left| ${1:${VISUAL}} \right| $0
	

snippet lr{ "left\{ right\}" i
	\left\\{ ${1:${VISUAL}} \right\\} $0
	

snippet lrb "left\{ right\}" i
	\left\\{ ${1:${VISUAL}} \right\\} $0
	

snippet lr[ "left[ right]" i
	\left[ ${1:${VISUAL}} \right] $0
	

snippet lra "leftangle rightangle" iA
	\left<${1:${VISUAL}} \right>$0
	


snippet conj "conjugate" iA
	\overline{$1}$0
	

snippet sum "sum" w
	\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
	

snippet taylor "taylor" w
	\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
	

snippet lim "limit" w
	\lim_{${1:n} \to ${2:\infty}} 
	

snippet limsup "limsup" w
	\limsup_{${1:n} \to ${2:\infty}} 
	

snippet prod "product" w
	\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
	

snippet part "d/dx" w
	\frac{\partial ${1:V}}{\partial ${2:x}} $0
	


snippet sq "\sqrt{}" iA
	\sqrt{${1:${VISUAL}}} $0
	

snippet sr "^2" iA
	^2
	

snippet cb "^3" iA
	^3
	

snippet td "to the ... power" iA
	^{$1}$0
	

snippet rd "to the ... power" iA
	^{($1)}$0
	

snippet __ "subscript" iA
	_{$1}$0
	

snippet ooo "\infty" iA
	\infty
	

snippet rij "mrij" i
	(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
	

snippet <= "leq" iA
	\le 
	

snippet >= "geq" iA
	\ge 
	

snippet EE "geq" iA
	\exists 
	

snippet AA "forall" iA
	\forall 
	

snippet xnn "xn" iA
	x_{n}
	

snippet ynn "yn" iA
	y_{n}
	

snippet xii "xi" iA
	x_{i}
	

snippet yii "yi" iA
	y_{i}
	

snippet xjj "xj" iA
	x_{j}
	

snippet yjj "yj" iA
	y_{j}
	

snippet xp1 "x" iA
	x_{n+1}
	

snippet xmm "x" iA
	x_{m}
	

snippet R0+ "R0+" iA
	\\R_0^+
	

snippet plot "Plot" w
	\begin{figure}[$1]
		\centering
		\begin{tikzpicture}
			\begin{axis}[
				xmin= ${2:-10}, xmax= ${3:10},
				ymin= ${4:-10}, ymax = ${5:10},
				axis lines = middle,
			]
				\addplot[domain=$2:$3, samples=${6:100}]{$7};
			\end{axis}
		\end{tikzpicture}
		\caption{$8}
		\label{${9:$8}}
	\end{figure}
	

snippet nn "Tikz node" w
	\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
	$0
	

	
snippet mcal "mathcal" iA
	\mathcal{$1}$0
	

snippet lll "l" iA
	\ell
	

snippet nabl "nabla" iA
	\nabla 
	

snippet xx "cross" iA
	\times 
	

priority 100
snippet ** "cdot" iA
	\cdot 
	

snippet norm "norm" iA
	\|$1\|$0
	

priority 100
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
	\\`!p snip.rv = match.group(1)`
	

priority 300
snippet dint "integral" wA
	\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
	

priority 200
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
	\\`!p snip.rv = match.group(1)`
	


priority 100
snippet -> "to" iA
	\to 
	

priority 200
snippet <-> "leftrightarrow" iA
	\leftrightarrow
	

snippet !> "mapsto" iA
	\mapsto 
	

snippet invs "inverse" iA
	^{-1}
	

snippet compl "complement" iA
	^{c}
	

snippet \\\ "setminus" iA
	\setminus
	

snippet >> ">>" iA
	\gg
	

snippet << "<<" iA
	\ll
	


snippet ~~ "~" iA
	\sim 
	

snippet set "set" wA
	\\{$1\\} $0
	

snippet || "mid" iA
	 \mid 
	

snippet cc "subset" Ai
	\subset 
	

snippet notin "not in " iA
	\not\in 
	

snippet inn "in " iA
	\in 
	

snippet NN "n" iA
	\N
	

snippet Nn "cap" iA
	\cap 
	

snippet UU "cup" iA
	\cup 
	

snippet uuu "bigcup" iA
	\bigcup_{${1:i \in ${2: I}}} $0
	

snippet nnn "bigcap" iA
	\bigcap_{${1:i \in ${2: I}}} $0
	

snippet OO "emptyset" iA
	\O
	

snippet RR "real" iA
	\R
	

snippet QQ "Q" iA
	\Q
	

snippet ZZ "Z" iA
	\Z
	

snippet <! "normal" iA
	\triangleleft 
	

snippet <> "hokje" iA
	\diamond 
	

snippet '(?<!i)sts' "text subscript" irA
	_\text{$1} $0
	

snippet tt "text" iA
	\text{$1}$0
	

snippet case "cases" wA
	\begin{cases}
		$1
	\end{cases}
	

snippet SI "SI" iA
	\SI{$1}{$2}
	

snippet bigfun "Big function" iA
	\begin{align*}
		$1: $2 &\longrightarrow $3 \\\\
		$4 &\longmapsto $1($4) = $0
	.\end{align*}
	

snippet cvec "column vector" iA
	\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
	

priority 10
snippet "bar" "bar" riA
	\overline{$1}$0
	

priority 100
snippet "([a-zA-Z])bar" "bar" riA
	\overline{`!p snip.rv=match.group(1)`}
	

priority 10
snippet "hat" "hat" riA
	\hat{$1}$0
	

priority 100
snippet "([a-zA-Z])hat" "hat" riA
	\hat{`!p snip.rv=match.group(1)`}
	

snippet letw "let omega" iA
	Let $\Omega \subset \C$ be open.
	

snippet HH "H" iA
	\mathbb{H}
	

snippet DD "D" iA
	\mathbb{D}	
